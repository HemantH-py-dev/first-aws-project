service: hemanth
useDotenv: true


provider:
  name: aws
  deploymentMethod: direct
  stage: "dev"
  region: "us-east-1"
  memorySize: 1024
  timeout: 30
  runtime: python3.8 
  iamRoleStatements:
    - Effect: Allow
      Action:
        - "dynamodb:DescribeTable"
        - "dynamodb:Query"
        - "dynamodb:Scan"
        - "dynamodb:GetItem"
        - "dynamodb:PutItem"
        - "dynamodb:UpdateItem"
        - "dynamodb:DeleteItem"
      Resource: "arn:aws:dynamodb:us-east-1:*:table/Contacts"


package:
  individually: true
  patterns:
    - "!node_modules/**"
    - "!requirements.txt"
    - "!package.json"

functions:
  contacts:
    handler: contacts/lambda_function.lambda_handler
    package:
      include:
        - contacts/lambda_function.py
        - contacts/contacts_api.py
        - contacts/lambda_responses.py
    events:
      - http:
          path: /user/contacts
          method: post
          cors: true
          integration: lambda
          request:
            passThrough: WHEN_NO_MATCH
            template:
              application/json: '{
                "action": "create",
                "user_id": "$input.params("user_id")",
                "body": $input.json("$")
                }'
          response:
            headers:
              Access-Control-Allow-Origin: "'*'"
      - http:
          path: /user/contacts
          method: get
          cors: true
          integration: lambda
          request:
            passThrough: WHEN_NO_MATCH
            template:
              application/json: '{
                "action": "get",
                "contact_id": "$input.params("contact_id")",
                "user_id": "$input.params("user_id")"
                }'
          response:
            headers:
              Access-Control-Allow-Origin: "'*'"
      - http:
          path: /user/contacts/{contact_id}
          method: put
          cors: true
          integration: lambda
          request:
            passThrough: WHEN_NO_MATCH
            template:
              application/json: '{
                "action": "update",
                "user_id": "$input.params("user_id")",
                "contact_id": "$input.params("contact_id")",
                "body": $input.json("$")
                }'
          response:
            headers:
              Access-Control-Allow-Origin: "'*'"
      - http:
          path: /user/contacts/{contact_id}
          method: delete
          cors: true
          integration: lambda
          request:
            passThrough: WHEN_NO_MATCH
            template:
              application/json: '{
                "action": "delete",
                "user_id": "$input.params("user_id")",
                "contact_id": "$input.params("contact_id")"
                }'
          response:
            headers:
              Access-Control-Allow-Origin: "'*'"

